function assert(condition,message){if(!condition)logger.error(message)}function generateGridHeaderElem(grid_headings){var $qrow=$("<tr />");$qrow.append($("<th />"));for(var i=0;i<grid_headings.length;i++){if($th=$("<th />"),"object"==typeof grid_headings[i])for(var ghi=0;ghi<grid_headings[i].length;ghi++)$th.append(grid_headings[i][ghi]);else $th.text(grid_headings[i]);$qrow.append($th)}var $qhead=$("<thead>").append($qrow);return $qhead}function generateGridBodyElem(question_ids,question_texts,answer_ids,checked){for(var $qbody=$("<tbody>"),qi=0;qi<question_ids.length;qi++){var qchecked=checked[qi];if($qrow=$("<tr />"),$td=$("<td />").css("text-align","left"),"object"==typeof question_texts[qi])for(var qti=0;qti<question_texts[qi].length;qti++)$td.append(question_texts[qi][qti]);else $td.text(question_texts[qi]);$qrow.append($td);for(var ai=0;ai<answer_ids[qi].length;ai++){var attrs={type:"radio",name:question_ids[qi],value:answer_ids[qi][ai]},achecked=$.inArray(answer_ids[qi][ai],qchecked);if(achecked>=0)attrs.checked=!0;$qrow.append($("<td />").append($("<input />").attr(attrs)))}$qbody.append($qrow)}return $qbody}function rearrange_into_grid(question_nums,$header_question,questions){if(0!==questions.length){if(null===$header_question)return addTextToErrorBox("Error in question "+question_nums[0]+": The first question in each grid must have a header. It can be an empty header if you want."),void 0;for(var question_types=_.map(questions,function($question){return getQuestionType($question)}),i=0;i<question_types.length;i++)if("radio"!==question_types[i])return addTextToErrorBox("Error in question "+question_nums[i]+": All grid questions must be radio questions."),void 0;var randomizations=_.map(questions,function($question){return getQuestionRandomization($question)});for(i=0;i<randomizations.length;i++)if(randomizations[i])return addTextToErrorBox("Error in question "+question_nums[i]+": Cannot have randomization in a grid question."),void 0;var question_ids=_.map(questions,function($question){return getQuestionId($question)}),answer_ids=_.map(questions,function($question){return getAnswerIds($question)}),question_texts=_.map(questions,function($question){return getQuestionTextChildren($question)}),all_grid_headings=_.map(questions,function($question){return getQuestionOptions($question)});for(assert(question_ids.length===question_texts.length,"mismatch of lengths question_ids.length != question_texts.length: "+question_ids.length+" != "+question_texts.length),assert(question_ids.length===all_grid_headings.length,"mismatch of lengths question_ids.length != all_grid_headings.length: "+question_ids.length+" != "+all_grid_headings.length),assert(question_ids.length===answer_ids.length,"mismatch of lengths question_ids.length != answer_ids.length: "+question_ids.length+" != "+answer_ids.length),i=1;i<all_grid_headings.length;i++){if(all_grid_headings[i].length!==all_grid_headings[0].length)return addTextToErrorBox("Error in question "+question_nums[i]+": All grid questions must have the same number of options as the first question in the grid."),void 0;for(var j=0;j<all_grid_headings[0].length;j++)if("string"==typeof all_grid_headings[0][j]&&all_grid_headings[0][j]!==all_grid_headings[i][j])return addTextToErrorBox("Error in question "+question_nums[i]+": All grid questions must have the same options as the first question in the grid."),void 0;assert(answer_ids[0].length===answer_ids[i].length,"mismatch of lengths answer_ids[0].length != answer_ids["+i+"].length: "+answer_ids[0].length+" != "+answer_ids[i].length)}var question_num_text=null;if(1==question_nums.length)question_num_text="Question "+question_nums[0];else question_num_text="Questions "+question_nums[0]+" - "+question_nums[question_nums.length-1];var checked=_.map(questions,function($question){return getCheckedOption($question)}),$qhead=generateGridHeaderElem(all_grid_headings[0]),$qbody=generateGridBodyElem(question_ids,question_texts,answer_ids,checked),$grid_question_table=$("<table>").addClass("grid_question").addClass("table");$grid_question_table.append($qhead).append($qbody);var $h3=$("<h3>").addClass("course-quiz-question-number").text(question_num_text),grid_header=$header_question.data("grid-header"),$course_quiz_question_text=$("<div>").addClass("course-quiz-question-text").append(grid_header),$course_quiz_question_body=$("<div>").addClass("course-quiz-question-body");$course_quiz_question_body.append($h3).append($course_quiz_question_text).append($grid_question_table),$header_question.before($course_quiz_question_body),_.each(questions,function($question){$question.remove()})}}function getQuestionType($question){return $question.find(".course-quiz-input").attr("type")}function getQuestionId($question){return $question.find(".course-quiz-input").attr("name")}function getQuestionTextChildren($question){var $questionTextElem=$question.find(".course-quiz-question-text");if(0===$questionTextElem.children().length)return $questionTextElem.text();else return $questionTextElem.children()}function getQuestionRandomization($question){return $question.find(".randomize").length>0}function getAnswerIds($question){return $question.find(".course-quiz-input").map(function(){return $(this).val()}).toArray()}function getQuestionOptions($question){return $question.find("label").map(function(){if(0===$(this).children().length)return $(this).text();else return $(this).children()}).toArray()}function getCheckedOption($question){return $question.find(".course-quiz-input").filter(function(){return $(this).is(":checked")}).map(function(){return $(this).val()}).toArray()}$("document").ready(function(){var question_num=0,question_nums=[],questions=[],header_question=null;$(".course-quiz-question-body").each(function(){if(question_num++,$(this).hasClass("grid-question")){if(void 0!==$(this).data("grid-header"))rearrange_into_grid(question_nums,header_question,questions),header_question=$(this),question_nums.length=questions.length=0;questions.push($(this)),question_nums.push(question_num)}else rearrange_into_grid(question_nums,header_question,questions),question_nums.length=questions.length=0,header_question=null}),rearrange_into_grid(question_nums,header_question,questions)});